{"ast":null,"code":"var _jsxFileName = \"/Users/Sugar/Trainee/specform/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Nav from './components/Nav';\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport Data from './components/Data';\nimport Conts from './components/Conts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [conts, setCont] = useState([]);\n  useEffect(() => fetchData());\n\n  const fetchData = async () => {\n    fetch('api/conts', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      this.setState(json.data);\n    }).catch(error => console.log(error));\n  };\n\n  console.log(typeof conts); //let current_id = conts.length +1;\n\n  const addCont = cont => {\n    const newCont = {\n      'id': 1,\n      'name': cont.name,\n      'email': cont.id\n    }; //Add Task\n\n    fetch('api/add_cont', {\n      method: 'POST',\n      body: JSON.stringify({\n        cont: newCont\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setCont(json.data);\n    }).catch(error => console.log(error));\n  }; //Delete Task\n\n\n  const delCont = id => {\n    fetch('api/del_cont/${id}', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setCont(json.data);\n    }).catch(error => console.log(error));\n\n    for (let i = 0; i < conts.length; i++) {\n      if (conts[i].id > id) {\n        conts[i].id -= 1;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addCont\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), conts.map(cont => {\n      return /*#__PURE__*/_jsxDEV(Conts, {\n        cont: cont,\n        onDelete: delCont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"2Nttj8I7areV6u4jqORiQHXbjoU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sugar/Trainee/specform/src/App.js"],"names":["Nav","Form","useEffect","useState","Data","Conts","App","conts","setCont","fetchData","fetch","method","headers","then","response","status","error","Error","statusText","console","log","json","setState","data","catch","addCont","cont","newCont","name","id","body","JSON","stringify","delCont","i","length","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport Nav from './components/Nav';\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport Data from './components/Data';\nimport Conts from './components/Conts';\n\n\nfunction App() {\n\n\n    const[conts,setCont] = useState([])\n\n    useEffect(() => fetchData());\n    \n    const fetchData = async () => {\n      fetch('api/conts', {\n        method : 'GET',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          this.setState(json.data);\n\n        })\n        .catch(error => console.log(error));\n    };\n    \n    console.log(typeof(conts))\n\n    //let current_id = conts.length +1;\n\n    const addCont = (cont) => {\n      const newCont = {\n      'id': 1,\n      'name': cont.name,\n      'email': cont.id\n\n      };\n\n      \n\n      //Add Task\n      fetch('api/add_cont', {\n        method: 'POST',\n        body: JSON.stringify({cont: newCont}),\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          setCont(json.data);\n\n        })\n        .catch(error => console.log(error));\n    };\n  \n    \n\n    //Delete Task\n    const delCont = (id) => {\n      fetch('api/del_cont/${id}', {\n        method : 'POST',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          setCont(json.data);\n\n        })\n        .catch(error => console.log(error));\n        for (let i = 0; i < conts.length; i++) {\n          if(conts[i].id > id) {\n            conts[i].id -= 1\n          }\n        }\n    };     \n    \n\n    return (\n      <div className=\"App\">\n\n        <Nav/>     \n\n        <Form onAdd = {addCont}/>  \n\n        {conts.map(cont =>{\n          return(\n            <Conts cont = {cont} onDelete = {delCont}/>\n          )\n        })};\n      \n      </div>\n\n    );\n\n    \n\n  }\n\n  export default App;\n\n"]},"metadata":{},"sourceType":"module"}