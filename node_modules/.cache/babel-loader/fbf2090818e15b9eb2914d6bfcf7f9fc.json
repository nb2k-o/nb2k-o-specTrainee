{"ast":null,"code":"var _jsxFileName = \"/Users/Sugar/Trainee/specform/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Nav from './components/Nav';\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport Data from './components/Data';\nimport Conts from './components/Conts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [conts, setConts] = useState([]);\n  useEffect(() => fetchData());\n\n  const fetchData = async () => {\n    fetch('api/conts', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setConts(json.data);\n    }).catch(error => console.log(error));\n  }; //let current_id = conts.length +1;\n\n\n  const addCont = cont => {\n    const newCont = {\n      'id': 1,\n      'name': \"ddf\",\n      'email': cont.email\n    }; //Add Task\n\n    fetch('/api/add_cont', {\n      method: 'POST',\n      body: JSON.stringify({\n        cont: newCont\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setConts(json.data);\n    }).catch(error => console.log(error));\n  }; //Delete Task\n\n\n  const delCont = id => {\n    fetch('/api/del_cont/${id}', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      const error = new Error('HTTP Error ${response.statusText}');\n      error.status = response.statusText;\n      error.response = response;\n      console.log(error);\n      throw error;\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setConts(json.data);\n    }).catch(error => console.log(error));\n\n    for (let i = 0; i < conts.length; i++) {\n      if (conts[i].id > id) {\n        conts[i].id -= 1;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addCont\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Conts, {\n      conts: conts,\n      onDelete: delCont\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"ShtBQVjAnKpjcC5ucVjmmgIx+X4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Sugar/Trainee/specform/src/App.js"],"names":["Nav","Form","useEffect","useState","Data","Conts","App","conts","setConts","fetchData","fetch","method","headers","then","response","status","error","Error","statusText","console","log","json","data","catch","addCont","cont","newCont","email","body","JSON","stringify","delCont","id","i","length"],"mappings":"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","sourcesContent":["import './App.css';\nimport Nav from './components/Nav';\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport Data from './components/Data';\nimport Conts from './components/Conts';\n\n\nfunction App() {\n\n\n    const[conts, setConts] = useState([])\n  \n    useEffect(() => fetchData());\n    \n    const fetchData = async () => {\n      fetch('api/conts', {\n        method : 'GET',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          setConts(json.data);\n\n        })\n        .catch(error => console.log(error));\n    };\n    \n\n    //let current_id = conts.length +1;\n\n    const addCont = (cont) => {\n      const newCont = {\n      'id': 1,\n      'name': \"ddf\",\n      'email': cont.email,\n\n      };\n\n      \n\n      //Add Task\n      fetch('/api/add_cont', {\n        method: 'POST',\n        body: JSON.stringify({cont: newCont}),\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json =>  {\n          console.log(json);\n          setConts(json.data);\n        })\n        .catch(error => console.log(error));\n    };\n  \n    \n\n    //Delete Task\n    const delCont = (id) => {\n      fetch('/api/del_cont/${id}', {\n        method : 'POST',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          setConts(json.data);\n        })\n        .catch(error => console.log(error));\n        for (let i = 0; i < conts.length; i++) {\n          if(conts[i].id > id) {\n            conts[i].id -= 1\n          }\n        }\n    };     \n  \n\n    return (\n      <div className=\"App\">\n\n        <Nav/>     \n\n        <Form onAdd = {addCont}/>  \n          \n        <Conts conts = {conts} onDelete = {delCont}/>\n    \n            \n      \n      </div>\n\n    );\n\n    \n\n  }\n\n  export default App;\n\n"]},"metadata":{},"sourceType":"module"}