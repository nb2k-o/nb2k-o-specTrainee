[{"/Users/Sugar/Trainee/specform/src/index.js":"1","/Users/Sugar/Trainee/specform/src/reportWebVitals.js":"2","/Users/Sugar/Trainee/specform/src/App.js":"3","/Users/Sugar/Trainee/specform/src/components/Data.jsx":"4","/Users/Sugar/Trainee/specform/src/components/Nav.jsx":"5","/Users/Sugar/Trainee/specform/src/components/Small.jsx":"6","/Users/Sugar/Trainee/specform/src/components/Form.jsx":"7","/Users/Sugar/Trainee/specform/src/components/Conts.jsx":"8"},{"size":500,"mtime":1614643301495,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1614643301496,"results":"11","hashOfConfig":"10"},{"size":3064,"mtime":1618536659942,"results":"12","hashOfConfig":"10"},{"size":392,"mtime":1616205333135,"results":"13","hashOfConfig":"10"},{"size":307,"mtime":1615590645362,"results":"14","hashOfConfig":"10"},{"size":182,"mtime":1614657527749,"results":"15","hashOfConfig":"10"},{"size":889,"mtime":1618119131062,"results":"16","hashOfConfig":"10"},{"size":329,"mtime":1618531616958,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18tefsm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/Sugar/Trainee/specform/src/index.js",[],["37","38"],"/Users/Sugar/Trainee/specform/src/reportWebVitals.js",[],"/Users/Sugar/Trainee/specform/src/App.js",["39","40","41","42","43","44","45"],"import './App.css';\nimport Nav from './components/Nav';\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport Data from './components/Data';\nimport Conts from './components/Conts';\n\n\nfunction App() {\n\n\n    const[conts, setConts] = useState([])\n  \n    useEffect(() => fetchData());\n    \n    const fetchData = async () => {\n      fetch('api/conts', {\n        method : 'GET',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          setConts(json.data);\n\n        })\n        .catch(error => console.log(error));\n    };\n    \n\n    let current_id = conts.length+1;\n    \n\n    const addCont = (cont) => {\n      const newCont = {\n      'id': current_id,\n      'name': cont.name,\n      'email': cont.email,\n\n      };\n\n      current_id ++;\n      \n      //Add Task\n      fetch('/api/add_cont', {\n        method: 'POST',\n        body: JSON.stringify({cont: newCont}),\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json =>  {\n          console.log(json);\n          conts = Array.from(json.data);\n        })\n        .catch(error => console.log(error));\n    };\n  \n    \n\n    //Delete Task\n    const delCont = (id) => {\n\n\n      \n      fetch('/api/del_cont/${id}', {\n        method : 'POST',\n        headers: {\n          'Content-Type' : 'application/json'\n        }})\n\n        .then(response => {\n            if(response.status >= 200 && response.status < 300){\n              return response;\n            }\n            const error = new Error('HTTP Error ${response.statusText}');\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        })\n        .then(response => response.json()) \n        .then(json => {\n          console.log(json);\n          conts = Array.from(json.data);\n        })\n        .catch(error => console.log(error));\n   \n    };     \n  \n\n    return (\n      <div className=\"App\">\n\n        <Nav/>     \n\n        <Form onAdd = {addCont}/>  \n          \n        <Conts conts = {conts} onDelete = {delCont}/>\n    \n            \n      \n      </div>\n\n    );\n\n    \n\n  }\n\n  export default App;\n\n","/Users/Sugar/Trainee/specform/src/components/Data.jsx",[],"/Users/Sugar/Trainee/specform/src/components/Nav.jsx",[],"/Users/Sugar/Trainee/specform/src/components/Small.jsx",["46"],"function Small ({small,name}) {\n    if (small == \"yes\") {\n      return(\n        <div class = \"spbox\">{name}</div>\n      )\n    }\n    return (<div>{name}</div>)\n}\n\nexport default Small","/Users/Sugar/Trainee/specform/src/components/Form.jsx",[],"/Users/Sugar/Trainee/specform/src/components/Conts.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":27,"column":37,"nodeType":"57","messageId":"58","endLine":27,"endColumn":72},{"ruleId":"55","severity":1,"message":"56","line":68,"column":37,"nodeType":"57","messageId":"58","endLine":68,"endColumn":72},{"ruleId":"59","severity":1,"message":"60","line":77,"column":11,"nodeType":"53","messageId":"61","endLine":77,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":89,"column":13,"nodeType":"57","messageId":"58","endLine":89,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":99,"column":37,"nodeType":"57","messageId":"58","endLine":99,"endColumn":72},{"ruleId":"59","severity":1,"message":"60","line":108,"column":11,"nodeType":"53","messageId":"61","endLine":108,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":2,"column":15,"nodeType":"64","messageId":"65","endLine":2,"endColumn":17},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-const-assign","'conts' is constant.","const","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]